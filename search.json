[{"title":"php面试题","url":"/2018/12/19/php面试题/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n最近一直在准备面试 整理了一些面试题\n<!-- more -->\n\n\n### 前后端数据交互\n<ol>\n    <li>form表单：通过form表单以get/post方式提交数据（最原始） \n    缺点：在提交的时候可能会导致页面跳转或刷新 用户体验不好\n           　　　 单项提交 不知道后台会给出什么响应</li>\n    <li>ajax：返回数据一般为json形式</li>\n</ol>\n\n### php的魔术方法\n* __construct\n- __set()\n- __isset()\n- __unset()\n- __clone() \n- __sleep()\n\n### php处理数组的函数\n- array() 　　　　　　　　创建工资\n- in_array() 　　　　　　 判断元素是否存在数组中\n- array_merge() 　　　　 合并数组\n- count() 　　　　　　　　返回数组中元素的个数\n- array_keys() 　　　　　获取数组的key\n- array_values() 　　　　获取数组中的value\n\n### php处理字符串的函数\n- trim()　　　　　　移除字符串两侧的空白\n- strlen()　　　　　获取字符串的长度\n- substr()　　　　　截取字符串的一部分\n- strstr()　　　　　找到字符串首字母出现的位置\n\n### 数据库的三种范式\n<li>第一范式：（1NF）无重复的列</li>\n<li>第二范式：（2NF）属性完全依赖于主键</li>\n<li>第三范式：（3NF）属性不依赖于其他非主属性</li>\n\n### 消息队列的两种模式\n　　点对点：不可重复消费\n　　发布/订阅：可重复消费\n\n### redis实现消息队列\n　　brpop(消费者)：从队列右侧**弹出**数据 如果队列中没有数据就**堵塞**等待\n　　lpush(生产者)：从队列左侧添加数据\n\n### redis应用场景\n<ol>\n<li>会话缓存（最常用）</li>\n<li>消息队列 　比如：支付</li>\n<li>活动排行榜或计数</li>\n<li>发布，订阅消息</li>\n</ol>\n\n### redis 危险命令\n　　flushall 　　清空所有记录,数据库\n　　flushdb 　　 清空数据库\n　　config 　　　客户端连接后可配置服务器\n　　keys　　　　 客户端链接后可查看所有存在的键\n\n### contet-type 常见格式\n　　text/html\n　　text/plain\n　　text/xml\n　　image/gif\n　　image/jpeg\n　　image/png\n\n\n\n","tags":["php"],"categories":["后端"]},{"title":"hexo自用黑色主题","url":"/2018/12/17/hexo自用黑色主题/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n关于black-blue模版的相关配置\n<!-- more -->\nhexo和coding打造静态博客 ： \n使用hexo一年有余，对所有主题都感觉有所缺陷，便修改了一个自用黑色主题，本主题以黑色和蓝色为主，色彩鲜明，主题明确。     \n&nbsp;\n## black-blue主题来源\n\n<p>本主题修改自spfk主题，但之前spfk主题有很多问题，本主题改进如下：</p>\n<ol><li>压缩js，css提高性能</li><li>代码段样式显示更完美</li><li>增加本地搜索</li><li>设置更合适的字体大小</li><li>颜色以黑色和蓝色为主，色彩鲜明</li><li>seo适当优化</li><li>删除多说，有言，增加畅言评论</li><li>删除stylus，全部改用css方便修改</li>\n</ol>\n\n## 主题地址\n[black-blue](https://github.com/liudiediea/black-blue)\n\n## black-blue主题配置\n### 切换主题\n复制主题到themes目录下 `cd themed && clone https://github.com/liudiediea/black-blue`，修改_config.yml文件 `theme:black-blue`\n\n## 主题配置\n菜单配置\n\n","tags":["hexo"],"categories":["开发工具"]},{"title":"VUE前端面试题","url":"/2018/12/14/VUE前端面试题/","content":"** {{ title }}：** <Excerpt in index | 首页摘要>\n面了一家前端 面试前做一些准备\n<!-- more -->\n\n### 1.active-class是哪个组件的属性?嵌套路由怎么定义\n答：vue-router模板的router-link组件\n### 2、怎么定义vue-router的动态路由？怎么获取传过来的动态参数？ \n答：在router目录下的index.js文件中，对path属性加上/:id。  使用router对象的params.id\n\n### 3、vue-router有哪几种导航钩子？    \n答：三种，一种是全局导航钩子：router.beforeEach(to,from,next) 作用：跳转前进行判断拦截。\n第二种：组件内的钩子；\n第三种：单独路由独享组件\n\n### 6、v-model是什么？怎么使用？ vue中标签怎么绑定事件？\n\n答：可以实现双向绑定，指令（v-class、v-for、v-if、v-show、v-on）。vue的model层的data属性\n绑定事件：`<input @click=doLog() />`\n \n### 10、vuex是什么？怎么使用？哪种功能场景使用它？\n\n答：vue框架中状态管理。在main.js引入store，注入。新建了一个目录store，….. export\n场景有：单页应用中，组件之间的状态。音乐播放、登录状态、加入购物车\n \n### 11、mvvm框架是什么？它和其它框架（jquery）的区别是什么？哪些场景适合？\n\n答：一个model+view+viewModel框架，数据模型model，viewModel连接两个\n区别：vue数据驱动，通过数据来显示视图层而不是节点操作。\n场景：数据操作比较多的场景，更加便捷","tags":["vue"],"categories":["web"]}]